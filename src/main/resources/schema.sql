DROP TABLE IF EXISTS users.credentials;
DROP TABLE IF EXISTS users.addresses;
DROP TABLE IF EXISTS users.users;

CREATE TABLE users.users
(
    user_id    UUID         NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE,
    updated_at TIMESTAMP WITHOUT TIME ZONE,
    first_name VARCHAR(100) NOT NULL,
    last_name  VARCHAR(100) NOT NULL,
    image_url  TEXT,
    email      VARCHAR(255) NOT NULL,
    phone      VARCHAR(20),
    CONSTRAINT pk_users PRIMARY KEY (user_id)
);

CREATE TABLE users.credentials
(
    credential_id              INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at                 TIMESTAMP WITHOUT TIME ZONE,
    updated_at                 TIMESTAMP WITHOUT TIME ZONE,
    username                   VARCHAR(255)                             NOT NULL,
    password                   TEXT                                     NOT NULL,
    role                       VARCHAR(255),
    is_enabled                 BOOLEAN DEFAULT TRUE,
    is_account_non_expired     BOOLEAN DEFAULT TRUE,
    is_account_non_locked      BOOLEAN DEFAULT TRUE,
    is_credentials_non_expired BOOLEAN DEFAULT TRUE,
    user_id                    UUID                                     NOT NULL,
    CONSTRAINT pk_credentials PRIMARY KEY (credential_id)
);

ALTER TABLE users.credentials
    ADD CONSTRAINT uc_credentials_user UNIQUE (user_id);

ALTER TABLE users.credentials
    ADD CONSTRAINT uc_credentials_username UNIQUE (username);

ALTER TABLE users.credentials
    ADD CONSTRAINT FK_CREDENTIALS_ON_USER FOREIGN KEY (user_id) REFERENCES users.users (user_id);

CREATE TABLE users.addresses
(
    address_id   INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at   TIMESTAMP WITHOUT TIME ZONE,
    updated_at   TIMESTAMP WITHOUT TIME ZONE,
    full_address VARCHAR(255)                             NOT NULL,
    postal_code  VARCHAR(255)                             NOT NULL,
    city         VARCHAR(255)                             NOT NULL,
    user_id      UUID                                     NOT NULL,
    CONSTRAINT pk_addresses PRIMARY KEY (address_id)
);

ALTER TABLE users.addresses
    ADD CONSTRAINT FK_ADDRESSES_ON_USER FOREIGN KEY (user_id) REFERENCES users.users (user_id);